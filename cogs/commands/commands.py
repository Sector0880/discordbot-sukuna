import discord
from discord.ext import commands

import yaml
import json
import asyncio
import datetime
import sys
from time import sleep
import uuid

from googletrans import Translator
from datetime import *

# –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å botConfig:
from botsConfig import (
	# –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
	info as bot_info, version as bot_version, avatar as bot_avatar, languages as bot_languages,
	# —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
	colors_bot, color_success, color_error,
	# —ç–º–æ–¥–∑–∏
	emoji_mark_none, emoji_mark_error, emoji_mark_success,
	emoji_switch_off, emoji_switch_on,
	emoji_lock_lock, emoji_lock_unlock,
	emoji_load_none, emoji_load_lag, emoji_load_partial_lag, emoji_load_ok,
	emoji_db_rework, emoji_db_ok
)

# –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å dbVars:
from dbVars import (
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–æ—Ç–∞
	bot_activity, bot_tasks_loop_premium_check_premiumtime, bot_tasks_loop_premium_change_premiumtimeremaining,
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–∏–ª—å–¥–∏–π
	guild_name, guild_prefix, guild_language,
	guild_premium, guild_premium_uuid, guild_premium_time_start, guild_premium_time_set, guild_premium_time_extra_history, guild_premium_time_end, guild_premium_time_remaining,
	guild_show_id,
	guild_bot_output,
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
	staff_creator_id, staff_ada_id, staff_staffList_SpecialPerms,
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—à–∏–±–æ–∫
	error_terminal_command_error, error_terminal_traceback_error,
	error_command_not_found, error_server_blocked, error_invalid_language,
	# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	files_status_txt
)

import botsFunctions


class BotCommands(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
	
	@commands.command(aliases = ['–≤—Ä–µ–º—è'])
	async def time(self, ctx):
		emb = discord.Embed(title = '–í—Ä–µ–º—è –æ–Ω–ª–∞–∏–Ω:')
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è UTC (–í—Å–µ–º–∏—Ä–Ω–æ–µ)', value = datetime.utcnow().strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 2)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 3)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –°–∞–º–∞—Ä—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 4)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ò—Ä–∫—É—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 5)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –û–º—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 6)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 7)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ò—Ä–∫—É—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 8)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –Ø–∫—É—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 9)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 10)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ú–∞–≥–∞–¥–∞–Ω—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 11)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö–∞–º—á–∞—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 12)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö–ó', value = (datetime.utcnow() + timedelta(hours = 6)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.set_footer(text = ctx.author, icon_url = ctx.author.avatar.url)
		await ctx.send(embed = emb)

		asyncio.run(botsFunctions.command_counter(ctx = ctx))
	
	@commands.command()
	async def files_status(self, ctx):
		await ctx.send(f"```dts\n{files_status_txt.read()}```")

		#await command_counter(ctx = ctx)

	@commands.command()
	async def botinfo_reset_used(self, ctx):
		with open("./botConfiguration/.db/bot/botConfiguration/botInfo.yml", "r") as read_file: botInfo = yaml.safe_load(read_file)
		botInfo["used"]["commands"]["all"] = 0
		botInfo["used"]["commands"]["mention"] = 0
		botInfo["used"]["commands"]["files_status"] = 0
		botInfo["used"]["commands"]["time"] = 0
		with open("./botConfiguration/.db/bot/botConfiguration/botInfo.yml", "w") as write_file: yaml.safe_dump(botInfo, write_file, sort_keys = False, allow_unicode = True)
		message = await ctx.channel.fetch_message(int(ctx.message.id))
		await message.add_reaction(emoji_mark_success)
	

	# –£–∑–Ω–∞—Ç—å –ø–∏–Ω–≥
	@commands.command(aliases = ['–ø–∏–Ω–≥'])
	async def ping(self, ctx):
		#ping = self.bot.latency
		ping = round(self.bot.latency * 1000)
		ping_emoji = 'üü©üî≥üî≥üî≥üî≥'

		#if ping > 0.10000000000000000:
		if ping > 100:
			ping_emoji = 'üüßüü©üî≥üî≥üî≥'

		if ping > 150:
			ping_emoji = 'üü•üüßüü©üî≥üî≥'

		if ping > 200:
			ping_emoji = 'üü•üü•üüßüü©üî≥'

		if ping > 250:
			ping_emoji = 'üü•üü•üü•üüßüü©'

		if ping > 300:
			ping_emoji = 'üü•üü•üü•üü•üüß'

		if ping > 350:
			ping_emoji = 'üü•üü•üü•üü•üü•'

		# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –ø–∏–Ω–≥–æ–º –±–æ—Ç–∞ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —à–∞—Ä–¥–∞
		shard_ping = f'`{ping_emoji}` `{ping}ms`'

		message = await ctx.send('–ü–æ–Ω–≥! üèì  `üî≥üî≥üî≥üî≥üî≥` `—Å–µ–∫—É–Ω–¥—É...`')
		await message.edit(content = f'–ü–æ–Ω–≥! üèì  {shard_ping}')
	
	@commands.command(aliases = ["chm"])
	async def checkmessage(self, ctx):
		if ctx.author.id not in [staff_creator_id(), staff_ada_id()] and not guild_bot_output(ctx): return await botsFunctions.bot_output_blocked(ctx)
		if ctx.author.id in [staff_creator_id(), staff_ada_id()]: 
			await ctx.send("–ü–æ–≤–µ–Ω—É—é—Å—å!")
			
		#if not guild_bot_output(ctx): 
			#if ctx.author.id == staff_creator_id(): asyncio.run(functions.bot_output_blocked_forcreator(ctx))
			#else: return asyncio.run(functions.bot_output_blocked(ctx))
		await ctx.send(staff_staffList_SpecialPerms())
		await ctx.send(str(uuid.uuid4().hex))
		await ctx.send(ctx.author.id not in staff_staffList_SpecialPerms() and not guild_bot_output(ctx))

	@commands.command(aliases = ["e"])
	async def exit(self, ctx):
		if ctx.author.id not in [staff_creator_id(), staff_ada_id()]: return await ctx.send("–ù–µ—Ç—É –ø—Ä–∞–≤.") # –Ω–∞ –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		await ctx.send("–í—ã–∫–ª—é—á–µ–Ω.")
		await self.bot.change_presence(status = discord.Status.offline)
		sys.exit()
	
	@commands.command()
	async def cmdC(self, ctx):
		if ctx.author.id not in staff_staffList_SpecialPerms() and not guild_bot_output(ctx): return await botsFunctions.bot_output_blocked(ctx)
		if ctx.author.id not in staff_staffList_SpecialPerms(): return await ctx.send("–ù–µ—Ç—É –ø—Ä–∞–≤.") # –Ω–∞ –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		# –∏–º–ø–æ—Ä—Ç—ã
		cmd_Count = open("./botConfiguration/.db/info/commandsCount.yml", encoding="utf-8")
 
		# –∫–æ–º–∞–Ω–¥–∞
		# —è –ø–æ—Ç–æ–º —ç—Ç–æ –≤—Å–µ —É–¥–∞–ª—é
		msg1 = await ctx.send("```–ó–∞–≥—Ä—É–∑–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥: []```")
		sleep(.2)
		msg2 = await msg1.edit(content = "```–ó–∞–≥—Ä—É–∑–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥: 0% \ [‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶]```")
		sleep(.2)
		msg3 = await msg2.edit(content = "```–ó–∞–≥—Ä—É–∑–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥: 24% | [‚ñ†‚ñ†‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶]```")
		sleep(.2)
		msg4 = await msg3.edit(content = "```–ó–∞–≥—Ä—É–∑–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥: 60% / [‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚Ä¶‚Ä¶‚Ä¶‚Ä¶]```")
		sleep(.2)
		await msg4.edit(content = "```–ó–∞–≥—Ä—É–∑–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥: 100% \ [‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†‚ñ†]```")
		await ctx.channel.purge(limit = 1)
		sleep(.1)
		await ctx.send(content = "```–°—á–µ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥:```")
		sleep(.2)
		await ctx.send(f"```dts\n{cmd_Count.read()}\n```")
	
	@commands.command()
	async def spam_ada(self, ctx):
		if ctx.author.id not in staff_staffList_SpecialPerms() and not guild_bot_output(ctx): return await botsFunctions.bot_output_blocked(ctx)
		if ctx.author.id not in staff_staffList_SpecialPerms(): return await ctx.send("–ù–µ—Ç—É –ø—Ä–∞–≤.") # –Ω–∞ –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		
		user_id = self.bot.get_user(int(224632121879166976))
		user_id_maks = self.bot.get_user(int(980175834373562439))
		await ctx.send(user_id)
		await ctx.send("—Å–ø–∞–º–ª—é")
		num = 0
		nim_chat = await user_id_maks.send(f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {num}')
		while True:
			await user_id.send("—Ç–µ–±–µ –ø–∏–∑–¥–µ—Ü")
			num +=1
			await nim_chat.edit(content = f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {num}')
			sleep(.5)


async def setup(bot):
	await bot.add_cog(BotCommands(bot))