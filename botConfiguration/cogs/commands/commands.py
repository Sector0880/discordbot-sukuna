import discord
from discord.ext import commands

import yaml
import json
import asyncio

from googletrans import Translator
from datetime import *

# –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å botConfig:
from botConfig import (
	# –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
	info as bot_info, version as bot_version, avatar as bot_avatar, languages as bot_languages,
	# —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
	colors_bot, color_success, color_error,
	# —ç–º–æ–¥–∑–∏
	emoji_mark_none, emoji_mark_error, emoji_mark_success,
	emoji_switch_off, emoji_switch_on,
	emoji_lock_lock, emoji_lock_unlock,
	emoji_load_none, emoji_load_lag, emoji_load_partial_lag, emoji_load_ok,
	emoji_db_rework, emoji_db_ok
)

# –ò–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å dbVars:
from dbVars import (
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–æ—Ç–∞
	bot_activity, bot_delete_after,
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–∏–ª—å–¥–∏–π
	guild_name, guild_prefix, guild_language,
	guild_premium, guild_premium_start_date, guild_premium_end_date,
	guild_show_id,
	guild_bot_output,
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
	staff_creator_id,
	# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—à–∏–±–æ–∫
	error_terminal_command_error, error_terminal_traceback_error,
	error_command_not_found, error_server_blocked, error_invalid_language,
	# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	files_status_txt
)

async def command_counter(ctx):
	command = ctx.invoked_with
	with open("./botConfiguration/.db/bot/botConfiguration/botInfo.yml", "r") as read_file: botInfo = yaml.safe_load(read_file)
	botInfo["used"]["commands"]["all"] += 1 # –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
	botInfo["used"]["commands"][command] += 1 # –≤—ã–∑—ã–≤–∞–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞
	with open("./botConfiguration/.db/bot/botConfiguration/botInfo.yml", "w") as write_file: yaml.safe_dump(botInfo, write_file, sort_keys = False, allow_unicode = True)

async def bot_output_blocked(ctx):
	emb = discord.Embed(
		description = "\n".join([
			#f"{emoji_mark_error if bot_switches_output_emoji() else ''} **–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.**",
			error_server_blocked()[guild_language(ctx)]["error"]["description1"].format(emoji_mark_error),
			#f"–î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞ (<@{staff_owner_id() if bot_switches_output_correct() else staff_owner_id}>)."
			error_server_blocked()[guild_language(ctx)]["error"]["description2"].format(staff_creator_id())
		]),
		color = color_error,
		timestamp = datetime.now()
	)
	emb.set_footer(text = ctx.author.name, icon_url = ctx.author.avatar)
	#emb.set_image(url = "https://cdn.discordapp.com/attachments/817101575289176064/1137345466875518986/black__200px.gif")
	await ctx.send(embed = emb)
async def bot_output_blocked_forcreator(ctx):
	await ctx.send("–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –ø–æ–≤–µ–Ω—É—é—Å—å!")


class BotCommands(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
	
	@commands.command(aliases = ['–≤—Ä–µ–º—è'])
	async def time(self, ctx):
		emb = discord.Embed(title = '–í—Ä–µ–º—è –æ–Ω–ª–∞–∏–Ω:')
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è UTC (–í—Å–µ–º–∏—Ä–Ω–æ–µ)', value = datetime.utcnow().strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 2)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 3)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –°–∞–º–∞—Ä—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 4)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ò—Ä–∫—É—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 5)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –û–º—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 6)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 7)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ò—Ä–∫—É—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 8)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –Ø–∫—É—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 9)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 10)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ú–∞–≥–∞–¥–∞–Ω—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 11)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö–∞–º—á–∞—Ç—Å–∫–æ–µ', value = (datetime.utcnow() + timedelta(hours = 12)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.add_field(name = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ö–ó', value = (datetime.utcnow() + timedelta(hours = 6)).strftime('**–î–∞—Ç–∞:** %Y-%m-%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
		emb.set_footer(text = ctx.author, icon_url = ctx.author.avatar.url)
		await ctx.send(embed = emb)

		await command_counter(ctx = ctx)
	
	@commands.command()
	async def files_status(self, ctx):
		await ctx.send(f"```dts\n{files_status_txt.read()}```")

		#await command_counter(ctx = ctx)

	@commands.command()
	async def botinfo_used_reset(self, ctx):
		with open("./botConfiguration/.db/bot/botConfiguration/botInfo.yml", "r") as read_file: botInfo = yaml.safe_load(read_file)
		botInfo["used"]["commands"]["all"] = 0
		botInfo["used"]["commands"]["mention"] = 0
		botInfo["used"]["commands"]["files_status"] = 0
		botInfo["used"]["commands"]["time"] = 0
		with open("./botConfiguration/.db/bot/botConfiguration/botInfo.yml", "w") as write_file: yaml.safe_dump(botInfo, write_file, sort_keys = False, allow_unicode = True)
		message = await ctx.channel.fetch_message(int(ctx.message.id))
		await message.add_reaction(emoji_mark_success)
	

	# –£–∑–Ω–∞—Ç—å –ø–∏–Ω–≥
	@commands.command(aliases = ['–ø–∏–Ω–≥'])
	async def ping(self, ctx):
		#ping = self.bot.latency
		ping = round(self.bot.latency * 1000)
		ping_emoji = 'üü©üî≥üî≥üî≥üî≥'

		#if ping > 0.10000000000000000:
		if ping > 100:
			ping_emoji = 'üüßüü©üî≥üî≥üî≥'

		if ping > 150:
			ping_emoji = 'üü•üüßüü©üî≥üî≥'

		if ping > 200:
			ping_emoji = 'üü•üü•üüßüü©üî≥'

		if ping > 250:
			ping_emoji = 'üü•üü•üü•üüßüü©'

		if ping > 300:
			ping_emoji = 'üü•üü•üü•üü•üüß'

		if ping > 350:
			ping_emoji = 'üü•üü•üü•üü•üü•'

		# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –ø–∏–Ω–≥–æ–º –±–æ—Ç–∞ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —à–∞—Ä–¥–∞
		shard_ping = f'`{ping_emoji}` `{ping}ms`'

		message = await ctx.send('–ü–æ–Ω–≥! üèì  `üî≥üî≥üî≥üî≥üî≥` `—Å–µ–∫—É–Ω–¥—É...`')
		await message.edit(content = f'–ü–æ–Ω–≥! üèì  {shard_ping}')
	
	@commands.command(aliases = ["chm"])
	async def checkmessage(self, ctx):
		if not guild_bot_output(ctx): 
			if ctx.author.id == staff_creator_id(): await bot_output_blocked_forcreator(ctx)
			else: return await bot_output_blocked(ctx)
		await ctx.send(staff_creator_id())
		await ctx.send(guild_bot_output(ctx))
	


async def setup(bot):
	await bot.add_cog(BotCommands(bot))