import discord
from discord.ext import commands

import json

from time import sleep


# Импорты всех данных с botConfig:
from botConfig import (
	info, version, avatar, languages,
	colors_bot, color_success, color_error,
	emoji_mark_none, emoji_mark_error, emoji_mark_success,
	emoji_switch_off, emoji_switch_on,
	emoji_lock_lock, emoji_lock_unlock,
	emoji_load_none, emoji_load_lag, emoji_load_partial_lag, emoji_load_ok,
	emoji_db_rework, emoji_db_ok
)

# Импорты всех данных с dbVars:
from dbVars import (
	# Параметры бота
	bot_presence, bot_delete_after,
	# Параметры гильдий
	guild_name, guild_prefix, guild_language,
	guild_premium,
	guild_show_id,
	guild_bot_output,
	# Параметры сотрудников
	staff_creator_id,
	# Параметры ошибок
	error_terminal_command_error, error_terminal_traceback_error,
	error_command_not_found, error_server_blocked, error_invalid_language,
	# Дополнительные параметры
	files_status_txt
)


async def premium_timer(self):
	with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "r", encoding="utf-8") as read_file: guilds_config_data = json.load(read_file)
	for guild in self.bot.guilds:
		if type(guilds_config_data[str(guild.id)]["additional-features"]["privileges"]["premium"]) == int:
			while guilds_config_data[str(guild.id)]["additional-features"]["privileges"]["premium"] > 0:
				with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "r", encoding="utf-8") as read_file: guilds_config_data = json.load(read_file)
				guilds_config_data[str(guild.id)]["additional-features"]["privileges"]["premium"] -= 1
				with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "w", encoding="utf-8") as write_file: json.dump(guilds_config_data, write_file, ensure_ascii = False, indent = 4)
				sleep(1)
		with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "r", encoding="utf-8") as read_file: guilds_config_data = json.load(read_file)
		guilds_config_data[str(guild.id)]["additional-features"]["privileges"]["premium"] = False
		with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "w", encoding="utf-8") as write_file: json.dump(guilds_config_data, write_file, ensure_ascii = False, indent = 4)

class Premium(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
		
	@commands.command()
	async def get_premium(self, ctx, timer_count: int):
		with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "r", encoding="utf-8") as read_file: guilds_config_data = json.load(read_file)
		guilds_config_data[str(ctx.guild.id)]["additional-features"]["privileges"]["premium"] = 0
		guilds_config_data[str(ctx.guild.id)]["additional-features"]["privileges"]["premium"] += timer_count
		with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "w", encoding="utf-8") as write_file: json.dump(guilds_config_data, write_file, ensure_ascii = False, indent = 4)
		#await ctx.message.add_reaction(emoji = emoji_mark_success) ебал в рот
		await ctx.send(f"Успешно, добавлено `{timer_count}` секунд\nНа данный момент: `{guilds_config_data[str(ctx.guild.id)]['additional-features']['privileges']['premium']}` секунд")
	
		sleep(1)
		await premium_timer(self)
	
	@commands.command()
	async def delete_premium(self, ctx):
		with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "r", encoding="utf-8") as read_file: guilds_config_data = json.load(read_file)
		guilds_config_data[str(ctx.guild.id)]["additional-features"]["privileges"]["premium"] = False
		with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "w", encoding="utf-8") as write_file: json.dump(guilds_config_data, write_file, ensure_ascii = False, indent = 4)
		await ctx.send("успешно")
	
	@commands.Cog.listener()
	async def on_ready(self):
		with open("./botConfiguration/.db/guildsConfiguration/guildsConfig.json", "r", encoding="utf-8") as read_file: guilds_config_data = json.load(read_file)
		for guild in self.bot.guilds:
			if type(guilds_config_data[str(guild.id)]["additional-features"]["privileges"]["premium"]) == int: await premium_timer(self)

async def setup(bot):
	await bot.add_cog(Premium(bot))