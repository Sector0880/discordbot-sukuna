import discord
from discord.ext import commands
from discord import app_commands
import yaml

import datetime, time
from time import *
from botConfig import *
from datetime import *
from dbVars import *
from botFunctions import *

class Info(commands.Cog):
	def __init__(self, bot: commands.Bot):
		self.bot = bot
	
	app_commands_group_info = app_commands.Group(name = "info", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
	
	@app_commands_group_info.command(
		name = "help",
		description = "–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞"
	)
	@app_commands.choices(command = [
		app_commands.Choice(name = "time", value = 1)
	])
	async def help(self, interaction: discord.Interaction, command: app_commands.Choice[int] = None):
		try:
			if command == None:
				list_cmds_info = []
				list_cmds_fun = []
				list_cmds_settings = [
					'`set_profile_about`',
					'`set_profile_age`',
					'`set_profile_city`',
					'`del_profile_about`',
					'`del_profile_age`',
					'`del_profile_city`',
				]
				# https://stackoverflow.com/questions/75372569/how-to-get-a-list-of-slash-commands-discord-py –ü–û–ß–ò–¢–ê–¢–¨
				for slash_command in self.bot.tree.walk_commands():
					list_cmds_info.append(f"</{slash_command.name}:> ")

				emb = discord.Embed(
					description = '\n'.join([
						"–ï—Å—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–∏—Ö —Ç–µ—Ö–Ω–∏–∫? –ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è –≤—Å–µ –∑–∞–ø–æ–º–Ω–∏—Ç—å."
						#"–Ø —Ä–∞–∑–¥–µ–ª–∏–ª —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥—É–ª–µ–π"
					]),
					color = 0x2b2d31
				)
				emb.add_field(
					name = f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è [{len(list_cmds_info)}]', 
					value = ', '.join(list_cmds_info),
					inline=True
				)
				emb.add_field(
					name = f'–í–µ—Å–µ–ª—å–µ [{len(list_cmds_fun)}]', 
					value = ', '.join(list_cmds_fun),
					inline=True
				)
				emb.add_field(
					name = f'–ù–∞—Å—Ç—Ä–æ–π–∫–∏ [{len(list_cmds_settings)}]', 
					value = ', '.join(list_cmds_settings),
					inline=False
				)
				lists_len = len(list_cmds_info) + len(list_cmds_fun) + len(list_cmds_settings)
				emb.set_footer(text = f"–î–æ—Å—Ç—É–ø–Ω–æ {lists_len} —Ç–µ—Ö–Ω–∏–∫")
				emb.set_author(name = "Sukuna —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ —Å–µ–±–µ, —á–∏—Ç–∞–π –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ", icon_url = self.bot.user.avatar)
			elif command.name:
				self.text_footer = False
				with open(f"./.db/docs/commands/{command.name}.yml", encoding="utf-8") as read_file: cmd = yaml.safe_load(read_file)
				
				if "describe" in cmd:
					keys = list(cmd["describe"].keys())
					text = ' '.join(keys)
					def add_color_markers(text):
						words = text.split()  # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞
						result = ""
						for word in words:
							if word.endswith("!"):
								# –ï—Å–ª–∏ —Å–ª–æ–≤–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è "*", –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä–∞—à–∏–≤–∞—é—â–∏–µ –º–∞—Ä–∫–µ—Ä—ã
								result += "\u001b[0;31m" + word + "\u001b[0;0m" + " "
								self.text_footer = True
							else:
								result += word + " "
						return result.strip()  # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–π –ø—Ä–æ–±–µ–ª –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
					formatted_text = add_color_markers(text)
				else:
					formatted_text = ""
				emb = discord.Embed(title = f'–ö–æ–º–∞–Ω–¥–∞: {command.name}', color = 0x2b2d31)
				emb.add_field(
					name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
					value = cmd["description"],
					inline=False
				)
				if "prefix" in cmd["type"]:
					pattern_value = f'\n```ansi\n{cspl_get_param(interaction, "g", "prefix")}{command.name} {formatted_text}\n```'
				elif "hybrid" in cmd["type"]:
					pattern_value = '\n'.join([
						f'\n```ansi\n/{command.name} {formatted_text}',
						f'{cspl_get_param(interaction, "g", "prefix")}{command.name} {formatted_text}\n```'
					])
				else:
					pattern_value = f'\n```ansi\n/{command.name} {formatted_text}\n```'
				emb.add_field(
					name = "–ü–∞—Ç—Ç–µ—Ä–Ω",
					value = pattern_value,
					inline=False
				)
				if "describe" in cmd: emb.add_field(
					name = "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã",
					value = "\n".join([f"`{key}` ‚Äî {value}" for key, value in cmd["describe"].items()]),
					inline=False
				)
				if self.text_footer: emb.set_footer(text = "! ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä")
			else:
				return await interaction.response.send_message("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral = True)
			await interaction.response.send_message(embed = emb, ephemeral = True)
		except Exception as e:
			await interaction.response.send_message(f'||{e}||')
	
	@commands.hybrid_command(
		name = 'ping',
		description = '–£–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –±–æ—Ç–∞.',
		aliases = ['–ø–∏–Ω–≥']
	)
	async def ping(self, ctx):
		try:
			ping = self.bot.latency
			ping_emoji = 'üü©üî≥üî≥üî≥üî≥'

			if ping > 0.10000000000000000:
				ping_emoji = 'üüßüü©üî≥üî≥üî≥'

			if ping > 0.15000000000000000:
				ping_emoji = 'üü•üüßüü©üî≥üî≥'

			if ping > 0.20000000000000000:
				ping_emoji = 'üü•üü•üüßüü©üî≥'

			if ping > 0.25000000000000000:
				ping_emoji = 'üü•üü•üü•üüßüü©'

			if ping > 0.30000000000000000:
				ping_emoji = 'üü•üü•üü•üü•üüß'

			if ping > 0.35000000000000000:
				ping_emoji = 'üü•üü•üü•üü•üü•'

			# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –ø–∏–Ω–≥–æ–º –±–æ—Ç–∞ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —à–∞—Ä–¥–∞
			shard_ping = f'{ping_emoji} `{round(self.bot.latency * 1000)}ms`'

			message = await ctx.send('–û—Ç–±–∏–≤–∞—é...  üî≥üî≥üî≥üî≥üî≥ `—Å–µ–∫—É–Ω–¥—É...`')
			await message.edit(content = f'–ü–æ–Ω–≥! üèì  {shard_ping}')
		except Exception as e:
			await ctx.send(e)
	
	@commands.hybrid_command(
		name = "profile",
		description = '–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —é–∑–µ—Ä–µ.',
		aliases = ['–ø—Ä–æ—Ñ–∏–ª—å']
	)
	async def profile(self, ctx, user: discord.Member = None):
		try:
			profile = ctx.author if not user else user
			roles = profile.roles
			role_list = ''
			role_list_number = 0

			for role in reversed(roles):
				if role != ctx.guild.default_role:
					role_list += f'<@&{role.id}> '
					role_list_number += 1
			
			if profile.status == discord.Status.online:
				status = '<:online:748149457396433016> –í —Å–µ—Ç–∏'
			elif profile.status == discord.Status.idle:
				status = '<:idle:748149485707984907> –ù–µ –∞–∫—Ç–∏–≤–µ–Ω'
			elif profile.status == discord.Status.dnd:
				status = '<a:mark_none:815121643479236618> –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å'
			else:
				status = '<:offline:748149539915038731> –ù–µ –≤ —Å–µ—Ç–∏'
			
			emb = discord.Embed(colour = 0x2b2d31)
			emb.set_author(name = f'{profile}', icon_url = profile.avatar)
			emb.set_thumbnail(url = profile.avatar)
			#if len(cspl_get_param(ctx, 'u', 'profile')) > 0:
			emb.add_field(name = '–ü—Ä–æ—Ñ–∏–ª—å', value = '\n'.join([
				f"**–û —Å–µ–±–µ:** {cspl_get_param(ctx, 'u', 'about', 'profile', user if user else None)}" if cspl_get_param(ctx, 'u', 'about', 'profile', user if user else None) else "**–û —Å–µ–±–µ:** `–Ω–µ—Ç—É`",
				f"**–í–æ–∑—Ä–∞—Å—Ç:** {cspl_get_param(ctx, 'u', 'age', 'profile', user if user else None)}" if cspl_get_param(ctx, 'u', 'age', 'profile', user if user else None) else "**–í–æ–∑—Ä–∞—Å—Ç:** `–Ω–µ—Ç—É`",
				f"**–ì–æ—Ä–æ–¥:** {cspl_get_param(ctx, 'u', 'city', 'profile', user if user else None)}" if cspl_get_param(ctx, 'u', 'city', 'profile', user if user else None) else "**–ì–æ—Ä–æ–¥:** `–Ω–µ—Ç—É`",
			]), inline = False)
			emb.add_field(name = '–°—Ç–∞—Ç—É—Å', value = status, inline = False)
			emb.add_field(name = f'–†–æ–ª–∏ [{role_list_number}]', value = '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç' if role_list == '' else role_list, inline = False)
			emb.add_field(name = '–í Discord', value = profile.created_at.strftime('**–î–∞—Ç–∞:** %d/%m/%Y\n**–í—Ä–µ–º—è:** %H:%M:%S'))
			emb.add_field(name = '–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ', value = profile.joined_at.strftime('**–î–∞—Ç–∞:** %d/%m/%Y\n**–í—Ä–µ–º—è:** %H:%M:%S'))
			emb.set_footer(text = f'ID: {profile.id}')
			emb.timestamp = datetime.utcnow()

			await ctx.send(embed = emb, ephemeral=True)
		except Exception as e:
			await ctx.send(repr(e), ephemeral=True)
	
	@commands.hybrid_command(
		name = "avatar",
		description = '–ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É —é–∑–µ—Ä–∞.',
		aliases = ['–∞–≤–∞—Ç–∞—Ä–∫–∞']
	)
	async def avatar(self, ctx, user: discord.Member = None):
		try:
			user = ctx.author if not user else user

			emb = discord.Embed(colour = 0x2b2d31)
			emb.set_author(name = user, icon_url = user.avatar)
			emb.set_image(url = user.avatar)

			await ctx.send(embed = emb, ephemeral=True)
		except Exception as e:
			await ctx.send(e, ephemeral=True)
	
	# –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
	@commands.command(aliases = ['–æ–±'])
	async def about(self, ctx):
		try:
			guilds = ''
			for guild in self.bot.guilds:
				guilds += '1'

			members = len(list(self.bot.get_all_members()))

			emb = discord.Embed()
			emb.set_author(name = f'{self.bot.user} | ID: {self.bot.user.id}', icon_url = self.bot.user.avatar)

			maks = self.bot.get_user(980175834373562439)
			emb.add_field(name = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', value = f'<@980175834373562439>', inline=False)
			emb.add_field(name = '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞', value = f'discord.py {discord.__version__}', inline=False)

			emb.add_field(name = '–ö–æ–ª-–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤', value = f'{str(len(guilds))}', inline=True)
			emb.add_field(name = '–ö–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤', value = f'{members}', inline=True)

			ping = self.bot.latency
			ping_emoji = 'üü©üî≥üî≥üî≥üî≥'

			if ping > 0.10000000000000000:
				ping_emoji = 'üüßüü©üî≥üî≥üî≥'

			if ping > 0.15000000000000000:
				ping_emoji = 'üü•üüßüü©üî≥üî≥'

			if ping > 0.20000000000000000:
				ping_emoji = 'üü•üü•üüßüü©üî≥'

			if ping > 0.25000000000000000:
				ping_emoji = 'üü•üü•üü•üüßüü©'

			if ping > 0.30000000000000000:
				ping_emoji = 'üü•üü•üü•üü•üüß'

			if ping > 0.35000000000000000:
				ping_emoji = 'üü•üü•üü•üü•üü•'

			# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –ø–∏–Ω–≥–æ–º –±–æ—Ç–∞ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —à–∞—Ä–¥–∞
			shard_ping = f'{ping_emoji} `{round(self.bot.latency * 1000)}ms`'

			TimeFromStart = datetime.now() - start_time

			emb.set_footer(text = f'–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã: {str(TimeFromStart)[:-7]}')

			emb.add_field(name = '–ü–∏–Ω–≥', value = shard_ping, inline = False)

			await ctx.send(embed = emb)
		except Exception as e:
			print(e)

async def setup(bot):
	await bot.add_cog(Info(bot))