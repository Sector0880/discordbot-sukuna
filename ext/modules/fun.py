import discord
from discord.ext import commands
from discord import app_commands

import nekos
from googletrans import Translator
import requests
from bs4 import BeautifulSoup
import random

from datetime import *
import botFunctions

class Fun(commands.Cog):
	def __init__(self, bot: commands.Bot):
		self.bot = bot
	
	@app_commands.command(
		name = 'time', 
		description = '–£–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è.'
	)
	async def time(self, interaction: discord.Interaction):
		try:
			botFunctions.add_command_usage_counter(interaction, 1)

			emb = discord.Embed(color=0x2b2d31)
			emb.add_field(name = 'UTC  üåê', value = datetime.utcnow().strftime('**–î–∞—Ç–∞:** %Y.%m.%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
			emb.add_field(name = '–ú–°–ö  üá∑üá∫', value = (datetime.utcnow() + timedelta(hours = 3)).strftime('**–î–∞—Ç–∞:** %Y.%m.%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
			#emb.set_footer(text = ctx.author, icon_url = ctx.author.avatar.url)

			await interaction.response.send_message(embed = emb, ephemeral=False)
			botFunctions.add_command_usage_counter(interaction, 2)
		except Exception as e:
			await interaction.response.send_message(e)
			botFunctions.add_command_usage_counter(interaction, 3)
	
	@app_commands.command(
		name = "fact",
		description="–£–∑–Ω–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç."
	)
	async def fact(self, interaction: discord.Interaction):
		facts = nekos.fact()

		tra = Translator()

		result = tra.translate(facts, dest = 'ru')

		await interaction.response.send_message(embed = discord.Embed(description = f'{result.text}.', color = 0xffff6c))
	
	@commands.command(aliases=['–ø–æ–∏—Å–∫'])
	@commands.is_owner()
	async def search(self, ctx, *, request: str = None):
		try:
			if not request:
				return await ctx.send('–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ –µ—â—ë –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–∞.')

			query = request.replace(" ", "%20")
			URL = f"https://google.com/search?q={query}"
			headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36'}
			resp = requests.get(URL, headers=headers)

			async with ctx.channel.typing():
				if resp.status_code == 200:
					soup = BeautifulSoup(resp.content, "html.parser")
					results = []
					for i in soup.find_all("div", class_="r"):
						anchors = i.find_all("a")
						if anchors:
							link = anchors[0]["href"]
							title = i.find("h3").text
							item = {
								'title': title,
								'link': link
							}
							results.append(item)

			desc = ""

			j = 0
			for i in results:
				j += 1
				desc += f'`{j}` - [{i["title"]}]({i["link"]})\n'

			emb = discord.Embed(title=f'–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É | {request}', description=f'{desc}\n[–ü–æ–¥—Ä–æ–±–Ω–µ–µ]({URL})')
			emb.set_thumbnail(url='http://ecmclub.ru/images/6564644.jpg')
			emb.set_footer(text=ctx.author, icon_url=ctx.author.avatar)
			await ctx.send(embed=emb)
		except Exception as e:
			print(repr(e))
	
	@commands.command(aliases = ['–±–∏—Ç–≤–∞'])
	async def battle(self, ctx, member: discord.Member):
		try:
			a = random.randint(1,2)
			lst_win = ['–±—ã–ª(–∞) —Å—ä–µ–¥–µ–Ω–∞ –±–æ–º–∂–æ–º.', '–±—ã–ª(–∞) —Å–±–∏—Ç(–∞) –º–∞—à–∏–Ω–æ–π.', '—Å—É–∏—Ü–∏–¥–Ω—É–ª—Å—è(–∞—Å—å).', '—Å–∞–º–æ–∏–∑–æ–ª–∏—Ä–æ–≤–∞–ª—Å—è(–∞—Å—å) –æ—Ç –º–µ–ª–æ–¥—Ä–∞–º–º—ã.', '–∑–∞–±—Ä–∞–ª–∏ –≤ –¥—É—Ä–∫—É (–¥–æ–º –†–æ–º–∞—à–∫–∞).', '–æ—Ç—Ä–∞–≤–∏–ª–∏ —Å—É–ø–æ–º –∏–∑ —à–∫–æ–ª—å–Ω–æ–π —Å—Ç–æ–ª–æ–≤–æ–π.', '—Å–∞–º–æ–∏–∑–æ–ª–∏—Ä–æ–≤–∞–ª—Å—è(–∞—Å—å) –æ—Ç —Å–∞–º–æ–≥–æ(–æ–π) —Å–µ–±—è.', '–æ–∂–∏—Ä–µ–ª(–∞) –∏–∑-–∑–∞ –≤–æ–∑–¥—É—Ö–∞.', '–ø–æ–ø–æ—Ç–µ–ª(–∞) –∏ —Å–±—Ä–æ—Å–∏–ª(–∞) 20–∫–≥ 0_0, –Ω–æ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü –æ–Ω(–∞) –Ω–∞–±—Ä–∞–ª(–∞) –µ—â—ë 50–∫–≥.']
			text_win = random.choice(lst_win)

			lst_def = ['—Å–ª—É—á–∞–π–Ω–æ —Å–∞–º(–∞) —Å–µ–±—è —Å—ä–µ–ª(–∞), –∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–º–æ—Ç—Ä–µ–ª –Ω–∞ —ç—Ç–æ –∑—Ä–µ–ª–∏—â–µ –∏ –µ–ª –ø–æ–ø–∫–æ—Ä–Ω.', '–ø–æ–ø—ã—Ç–∞–ª—Å—è(–∞—Å—å) –∫–∏–Ω—É—Ç—å –≤—ã–∑–æ–≤, –Ω–æ –±–µ–∑—É—Å–ø–µ—à–Ω–æ —Ç–∞–∫ –∫–∞–∫ —Å–ª–∞–¥–æ—Å—Ç–∏ —É –Ω–µ–≥–æ(–µ—ë) –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ.']
			text_def = random.choice(lst_def)

			if member == ctx.author:
				emb = discord.Embed(description = f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–∞—Ç—å –Ω–∞ –±–∏—Ç–≤—É —Å–∞–º–æ–≥–æ —Å–µ–±—è.')
				emb.set_author(name = ctx.author, icon_url = ctx.author.avatar)
				return await ctx.send(embed = emb)

			if a == 1:
				emb = discord.Embed(description = f'{member.mention} {text_win}\n\n**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å:** <@!{ctx.author.id}>')
				emb.set_footer(text = ctx.author, icon_url = ctx.author.avatar)
				await ctx.send(embed = emb)
			else:
				emb = discord.Embed(description = f'{ctx.author.mention} {text_def}\n\n**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å:** {member.mention}')
				emb.set_footer(text = ctx.author, icon_url = ctx.author.avatar)
				await ctx.send(embed = emb)
		except Exception as e:
			print(repr(e))



async def setup(bot):
	await bot.add_cog(Fun(bot))