import discord
from discord.ext import commands
from discord import app_commands

import nekos
from googletrans import Translator
import requests
from bs4 import BeautifulSoup
import random

from datetime import *
import botFunctions

class Fun(commands.Cog):
	def __init__(self, bot: commands.Bot):
		self.bot = bot
	
	@app_commands.command(
		name = 'time', 
		description = '–£–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è.'
	)
	async def time(self, interaction: discord.Interaction):
		try:
			botFunctions.add_command_usage_counter(interaction, 1)

			emb = discord.Embed(color=0x2b2d31)
			emb.add_field(name = 'UTC  üåê', value = datetime.utcnow().strftime('**–î–∞—Ç–∞:** %Y.%m.%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
			emb.add_field(name = '–ú–°–ö  üá∑üá∫', value = (datetime.utcnow() + timedelta(hours = 3)).strftime('**–î–∞—Ç–∞:** %Y.%m.%d\n**–í—Ä–µ–º—è:** %H:%M:%S'))
			#emb.set_footer(text = ctx.author, icon_url = ctx.author.avatar.url)

			await interaction.response.send_message(embed = emb, ephemeral=False)
			botFunctions.add_command_usage_counter(interaction, 2)
		except Exception as e:
			await interaction.response.send_message(e)
			botFunctions.add_command_usage_counter(interaction, 3)
	
	@app_commands.command(
		name = "fact",
		description="–£–∑–Ω–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç."
	)
	async def fact(self, interaction: discord.Interaction):
		facts = nekos.fact()

		tra = Translator()

		result = tra.translate(facts, dest = 'ru')

		await interaction.response.send_message(embed = discord.Embed(description = f'{result.text}.', color = 0xffff6c))
	
	@app_commands.command(
		name = "battle",
		description="–£ –∫–æ–≥–æ —É–¥–∞—á–∞ —Å–∏–ª—å–Ω–µ–µ?"
	)
	@app_commands.describe(
		member = "–Æ–∑–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞"
    )
	async def battle(self, interaction: discord.Interaction, member: discord.Member):
		try:
			a = random.randint(1,2)
			lst_win = ['–±—ã–ª(–∞) —Å—ä–µ–¥–µ–Ω–∞ –±–æ–º–∂–æ–º.', '–±—ã–ª(–∞) —Å–±–∏—Ç(–∞) –º–∞—à–∏–Ω–æ–π.', '—Å—É–∏—Ü–∏–¥–Ω—É–ª—Å—è(–∞—Å—å).', '—Å–∞–º–æ–∏–∑–æ–ª–∏—Ä–æ–≤–∞–ª—Å—è(–∞—Å—å) –æ—Ç –º–µ–ª–æ–¥—Ä–∞–º–º—ã.', '–∑–∞–±—Ä–∞–ª–∏ –≤ –¥—É—Ä–∫—É (–¥–æ–º –†–æ–º–∞—à–∫–∞).', '–æ—Ç—Ä–∞–≤–∏–ª–∏ —Å—É–ø–æ–º –∏–∑ —à–∫–æ–ª—å–Ω–æ–π —Å—Ç–æ–ª–æ–≤–æ–π.', '—Å–∞–º–æ–∏–∑–æ–ª–∏—Ä–æ–≤–∞–ª—Å—è(–∞—Å—å) –æ—Ç —Å–∞–º–æ–≥–æ(–æ–π) —Å–µ–±—è.', '–æ–∂–∏—Ä–µ–ª(–∞) –∏–∑-–∑–∞ –≤–æ–∑–¥—É—Ö–∞.', '–ø–æ–ø–æ—Ç–µ–ª(–∞) –∏ —Å–±—Ä–æ—Å–∏–ª(–∞) 20–∫–≥ 0_0, –Ω–æ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü –æ–Ω(–∞) –Ω–∞–±—Ä–∞–ª(–∞) –µ—â—ë 50–∫–≥.']
			text_win = random.choice(lst_win)

			lst_def = ['—Å–ª—É—á–∞–π–Ω–æ —Å–∞–º(–∞) —Å–µ–±—è —Å—ä–µ–ª(–∞), –∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–º–æ—Ç—Ä–µ–ª –Ω–∞ —ç—Ç–æ –∑—Ä–µ–ª–∏—â–µ –∏ –µ–ª –ø–æ–ø–∫–æ—Ä–Ω.', '–ø–æ–ø—ã—Ç–∞–ª—Å—è(–∞—Å—å) –∫–∏–Ω—É—Ç—å –≤—ã–∑–æ–≤, –Ω–æ –±–µ–∑—É—Å–ø–µ—à–Ω–æ —Ç–∞–∫ –∫–∞–∫ —Å–ª–∞–¥–æ—Å—Ç–∏ —É –Ω–µ–≥–æ(–µ—ë) –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ.']
			text_def = random.choice(lst_def)

			if member == interaction.user:
				emb = discord.Embed(description = f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–∞—Ç—å –Ω–∞ –±–∏—Ç–≤—É —Å–∞–º–æ–≥–æ —Å–µ–±—è.')
				emb.set_author(name = interaction.user, icon_url = interaction.user.avatar)
				return await interaction.response.send_message(embed = emb)

			if a == 1:
				emb = discord.Embed(description = f'{member.mention} {text_win}\n\n**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å:** <@!{interaction.user.id}>')
				emb.set_footer(text = interaction.user, icon_url = interaction.user.avatar)
				await interaction.response.send_message(embed = emb)
			else:
				emb = discord.Embed(description = f'{interaction.author.mention} {text_def}\n\n**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å:** {member.mention}')
				emb.set_footer(text = interaction.user, icon_url = interaction.user.avatar)
				await interaction.response.send_message(embed = emb)
		except Exception as e:
			print(repr(e))
	
	# –ú–Ω–µ–Ω–∏–µ
	@app_commands.command(
		name = "opinion",
		description = '–£–∑–Ω–∞—Ç—å –º–Ω–µ–Ω–∏–µ –±–æ—Ç–∞ –æ —á–µ–º-—Ç–æ'
	)
	async def opinion(self, interaction: discord.Interaction, *, arg: str):
		try:
			a = random.randint(1, 3)
			lst_true = ['–°–æ–≥–ª–∞—Å–µ–Ω!', '–ü–æ–∂–∞–ª—É–π —Å–æ–≥–ª–∞—à—É—Å—å —Å —Ç–æ–±–æ–π.', '–≠—Ç–æ –±–µ–∑–∞–≥–æ–≤–æ—Ä–æ—á–Ω–æ –ø—Ä–∞–≤–¥–∞!', '–î–∞ —Ç—ã –ø—Ä–∞–≤!']
			text_true = random.choice(lst_true)

			lst_bot_opinion = [f'{interaction.user.mention},\n–Ø —Å—á–∏—Ç–∞—é —á—Ç–æ —Ç—ã –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —à–∏–∑–∏–∫ 100%! –ú–æ—ë –º–Ω–µ–Ω–∏–µ –∑–∞–∫–æ–Ω :–ó']
			text_bot_opinion = random.choice(lst_bot_opinion)

			lst_false = ['–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω!', '–ù–µ–ø—Ä–∞–≤–¥–∞.']
			text_false = random.choice(lst_false)

			if a == 1:
				emb = discord.Embed(title = f"–§–∞–∫—Ç: {arg}" , description = text_true)
				emb.set_footer(text = interaction.user, icon_url = interaction.user.avatar)
				await interaction.response.send_message(embed = emb)
			elif a == 2:
				emb = discord.Embed(title = f"–§–∞–∫—Ç: {arg}" , description = text_bot_opinion)
				emb.set_footer(text = interaction.user, icon_url = interaction.user.avatar)
				await interaction.response.send_message(embed = emb)
			else:
				emb = discord.Embed(title = f"–§–∞–∫—Ç: {arg}" , description = text_false)
				emb.set_footer(text = interaction.user, icon_url = interaction.user.avatar)
				await interaction.response.send_message(embed = emb)
		except Exception as e:
			await interaction.response.send_message(repr(e))

async def setup(bot):
	await bot.add_cog(Fun(bot))